plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "1.7.10"
}

version = project.modVersion
group = project.mavenGroup

base {
	archivesName = project.archivesBaseName
}

repositories {
	flatDir {
		dir 'libs'
	}

	maven {
		name = 'BlameJared Maven'
		url = 'https://maven.blamejared.com'
	}
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "Ladysnake Mods"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name "entity reach"
		url "https://maven.jamieswhiteshirt.com/libs-release/"
	}
	maven { url "https://mvn.devos.one/snapshots/" }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		url = "https://jitpack.io"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraftVersion}"
	mappings "net.fabricmc:yarn:${project.yarnMappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loaderVersion}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricVersion}"

	modImplementation("net.fabricmc:fabric-language-kotlin:$fabricLanguageKotlinVersion")

	modImplementation "at.petra-k.paucal:paucal-fabric-$minecraftVersion:$paucalVersion"
	modImplementation("at.petra-k.hexcasting:hexcasting-fabric-$minecraftVersion:$hexcastingVersion") {
		exclude module: "phosphor"
	}
	modImplementation "vazkii.patchouli:Patchouli:$minecraftVersion-$patchouliVersion-FABRIC-SNAPSHOT"

//	modImplementation "me.zeroeightsix:fiber:$fiberVersion"
//	include "me.zeroeightsix:fiber:$fiberVersion"

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-api:$cardinalComponentsVersion"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-api:$cardinalComponentsVersion"

	modImplementation "$modID:serialization-hooks:$serializationHooksVersion"
	include "$modID:serialization-hooks:$serializationHooksVersion"

	modImplementation("me.shedaniel.cloth:cloth-config-fabric:$clothConfigVersion") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "com.github.apace100:origins-fabric:v${project.originsVersion}"
	modImplementation "com.github.apace100:calio:${project.calioVersion}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archivesBaseName
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}